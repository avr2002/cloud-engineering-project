{
  "openapi": "3.1.0",
  "info": {
    "title": "Files API",
    "summary": "Store and Retrieve Files.",
    "description": "<a href=\"https://github.com/avr2002\" target=\"_blank\">            <img src=\"https://img.shields.io/badge/Maintained%20by-Amit%20Vikram%20Raj-F4BBFF?style=for-the-badge\">        </a>\n\n| Helpful Links | Notes |\n| --- | --- |\n| [MLOps Club](https://mlops-club.org) | ![MLOps Club](https://img.shields.io/badge/Memember%20of-MLOps%20Club-05998B?style=for-the-badge) |\n| [Project Repo](https://github.com/avr2002/cloud-engineering-project) | `avr2002/cloud-engineering-project` |\n",
    "contact": {
      "name": "Amit",
      "url": "https://www.linkedin.com/in/avr27/",
      "email": "avr13405@gmail.com"
    },
    "license": {
      "name": "Apache 2.0",
      "identifier": "MIT"
    },
    "version": "v1"
  },
  "paths": {
    "/v1/files/{file_path}": {
      "put": {
        "tags": [
          "Files"
        ],
        "summary": "Upload File",
        "description": "Upload or Update a File.",
        "operationId": "Files-upload_file",
        "parameters": [
          {
            "name": "file_path",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The path to the file.",
              "title": "File Path"
            },
            "description": "The path to the file."
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/Body_Files-upload_file"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PutFileResponse"
                },
                "example": {
                  "file_path": "path/to/file.txt",
                  "message": "Existing file updated at path: path/to/file.txt"
                }
              }
            }
          },
          "201": {
            "content": {
              "application/json": {
                "example": {
                  "file_path": "path/to/file.txt",
                  "message": "New file uploaded at path: path/to/file.txt"
                }
              }
            },
            "description": "Created"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "head": {
        "tags": [
          "Files"
        ],
        "summary": "Get File Metadata",
        "description": "Retrieve File Metadata.\n\nNote: by convention, HEAD requests MUST NOT return a body in the response.",
        "operationId": "Files-get_file_metadata",
        "parameters": [
          {
            "name": "file_path",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "File Path"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            },
            "headers": {
              "Content-Type": {
                "description": "The [MIME type](https://developer.mozilla.org/en-US/docs/Web/HTTP/Basics_of_HTTP/MIME_types/Common_types) of the file.",
                "example": "text/plain",
                "schema": {
                  "type": "string",
                  "format": "text"
                }
              },
              "Content-Length": {
                "description": "The size of the file in bytes.",
                "example": 512,
                "schema": {
                  "type": "integer",
                  "format": "integer"
                }
              },
              "Last-Modified": {
                "description": "The last modified date of the file.",
                "example": "Thu, 01 Jan 2022 00:00:00 GMT",
                "schema": {
                  "type": "string",
                  "format": "date-time"
                }
              }
            }
          },
          "404": {
            "description": "File not found for the given `file_path`.",
            "headers": {
              "X-Error": {
                "description": "Error message indicating the file was not found.",
                "example": "File not found: `path/to/file.txt`",
                "schema": {
                  "type": "string",
                  "format": "text"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "Files"
        ],
        "summary": "Get File",
        "description": "Retrieve a File.",
        "operationId": "Files-get_file",
        "parameters": [
          {
            "name": "file_path",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The path to the file.",
              "title": "File Path"
            },
            "description": "The path to the file."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string",
                  "format": "text"
                },
                "example": "File Content."
              },
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            },
            "headers": {
              "Content-Type": {
                "description": "The [MIME type](https://developer.mozilla.org/en-US/docs/Web/HTTP/Basics_of_HTTP/MIME_types/Common_types) of the file.",
                "example": "text/plain",
                "schema": {
                  "type": "string"
                }
              },
              "Content-Length": {
                "description": "The size of the file in bytes.",
                "example": 512,
                "schema": {
                  "type": "integer"
                }
              }
            }
          },
          "404": {
            "description": "File not found for the given `file_path`.",
            "content": {
              "application/json": {
                "example": {
                  "detail": "File not found: path/to/file.txt"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Files"
        ],
        "summary": "Delete File",
        "description": "Delete a file.\n\nNOTE: DELETE requests MUST NOT return a body in the response.",
        "operationId": "Files-delete_file",
        "parameters": [
          {
            "name": "file_path",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The path to the file.",
              "title": "File Path"
            },
            "description": "The path to the file."
          }
        ],
        "responses": {
          "204": {
            "description": "File deleted successfully."
          },
          "404": {
            "description": "File not found."
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/files": {
      "get": {
        "tags": [
          "Files"
        ],
        "summary": "List Files",
        "description": "List Files with Pagination.",
        "operationId": "Files-list_files",
        "parameters": [
          {
            "name": "page_size",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 100,
              "minimum": 1,
              "default": 10,
              "title": "Page Size"
            }
          },
          {
            "name": "directory",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "default": "",
              "title": "Directory"
            }
          },
          {
            "name": "page_token",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Page Token"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetFilesResponse"
                },
                "examples": {
                  "With Pagination": {
                    "files": [
                      {
                        "file_path": "path/to/file1.txt",
                        "last_modified": "2021-09-01T12:00:00",
                        "size_bytes": 512
                      },
                      {
                        "file_path": "path/to/file2.txt",
                        "last_modified": "2021-09-02T12:00:00",
                        "size_bytes": 256
                      }
                    ],
                    "next_page_token": "next_page_token_value"
                  },
                  "No Pages Left": {
                    "files": [
                      {
                        "file_path": "path/to/file1.txt",
                        "last_modified": "2021-09-01T12:00:00",
                        "size_bytes": 512
                      },
                      {
                        "file_path": "path/to/file2.txt",
                        "last_modified": "2021-09-02T12:00:00",
                        "size_bytes": 256
                      }
                    ],
                    "next_page_token": "null"
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "Body_Files-upload_file": {
        "properties": {
          "file_content": {
            "type": "string",
            "format": "binary",
            "title": "File Content",
            "description": "The file to upload."
          }
        },
        "type": "object",
        "required": [
          "file_content"
        ],
        "title": "Body_Files-upload_file"
      },
      "FileMetadata": {
        "properties": {
          "file_path": {
            "type": "string",
            "title": "File Path",
            "description": "The path to the file.",
            "example": "path/to/file.txt"
          },
          "last_modified": {
            "type": "string",
            "format": "date-time",
            "title": "Last Modified",
            "description": "The last modified timestamp of the file.",
            "example": "2021-09-01T12:00:00"
          },
          "size_bytes": {
            "type": "integer",
            "title": "Size Bytes",
            "description": "The size of the file in bytes.",
            "example": 512
          }
        },
        "type": "object",
        "required": [
          "file_path",
          "last_modified",
          "size_bytes"
        ],
        "title": "FileMetadata",
        "description": "`Metadata` of a file."
      },
      "GetFilesResponse": {
        "properties": {
          "files": {
            "items": {
              "$ref": "#/components/schemas/FileMetadata"
            },
            "type": "array",
            "title": "Files"
          },
          "next_page_token": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Next Page Token"
          }
        },
        "type": "object",
        "required": [
          "files",
          "next_page_token"
        ],
        "title": "GetFilesResponse",
        "description": "Response model for `GET /v1/files/:file_path`.",
        "examples": [
          {
            "files": [
              {
                "file_path": "path/to/file1.txt",
                "last_modified": "2021-09-01T12:00:00",
                "size_bytes": 512
              },
              {
                "file_path": "path/to/file2.txt",
                "last_modified": "2021-09-02T12:00:00",
                "size_bytes": 256
              }
            ],
            "next_page_token": "next_page_token_value"
          },
          {
            "files": [
              {
                "file_path": "path/to/file1.txt",
                "last_modified": "2021-09-01T12:00:00",
                "size_bytes": 512
              },
              {
                "file_path": "path/to/file2.txt",
                "last_modified": "2021-09-02T12:00:00",
                "size_bytes": 256
              }
            ],
            "next_page_token": "null"
          }
        ]
      },
      "HTTPValidationError": {
        "properties": {
          "detail": {
            "items": {
              "$ref": "#/components/schemas/ValidationError"
            },
            "type": "array",
            "title": "Detail"
          }
        },
        "type": "object",
        "title": "HTTPValidationError"
      },
      "PutFileResponse": {
        "properties": {
          "file_path": {
            "type": "string",
            "title": "File Path",
            "description": "The path to the file.",
            "example": "path/to/file.txt"
          },
          "message": {
            "type": "string",
            "title": "Message",
            "description": "The message indicating the status of the operation.",
            "example": "New file uploaded at path: path/to/file.txt"
          }
        },
        "type": "object",
        "required": [
          "file_path",
          "message"
        ],
        "title": "PutFileResponse",
        "description": "Response model for `PUT /v1/files/:file_path`.",
        "200": {
          "content": {
            "application/json": {
              "example": {
                "file_path": "path/to/file.txt",
                "message": "Existing file updated at path: path/to/file.txt"
              }
            }
          }
        },
        "201": {
          "content": {
            "application/json": {
              "example": {
                "file_path": "path/to/file.txt",
                "message": "New file uploaded at path: path/to/file.txt"
              }
            }
          }
        }
      },
      "ValidationError": {
        "properties": {
          "loc": {
            "items": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "integer"
                }
              ]
            },
            "type": "array",
            "title": "Location"
          },
          "msg": {
            "type": "string",
            "title": "Message"
          },
          "type": {
            "type": "string",
            "title": "Error Type"
          }
        },
        "type": "object",
        "required": [
          "loc",
          "msg",
          "type"
        ],
        "title": "ValidationError"
      }
    }
  }
}